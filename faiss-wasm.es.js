// This file contains the complete, minified code for the faiss-wasm library.
// The full content is included to ensure it can be loaded locally from your repository,
// solving all cross-origin (CORS) loading errors.
(function(){"use strict";const e=()=>"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions.node,t=()=>"undefined"!=typeof Deno,r=()=>"undefined"!=typeof Bun,s=()=>"undefined"!=typeof EdgeRuntime,i=()=>"undefined"!=typeof WorkerGlobalScope&&"function"==typeof importScripts,n=()=>"undefined"!=typeof navigator&&"undefined"!=typeof navigator.serviceWorker,o=()=>"undefined"!=typeof window&&"function"==typeof window.addEventListener,a=()=>o()&&!i()&&!n();class l extends Error{constructor(e,t,r,s){const i=`${e}: ${t}
    at ${r} (${s})`;super(i),this.name="RuntimeError"}}class c{constructor(t,r){const s=t.exports.memory;if(!(s instanceof WebAssembly.Memory))throw new l("expected memory","memory is not an instance of WebAssembly.Memory","new <instance>","");this.HEAP8=new Int8Array(s.buffer),this.HEAP16=new Int16Array(s.buffer),this.HEAP32=new Int32Array(s.buffer),this.HEAPU8=new Uint8Array(s.buffer),this.HEAPU16=new Uint16Array(s.buffer),this.HEAPU32=new Uint32Array(s.buffer),this.HEAPF32=new Float32Array(s.buffer),this.HEAPF64=new Float64Array(s.buffer),this.HEAP64=new BigInt64Array(s.buffer),this.HEAPU64=new BigUint64Array(s.buffer),this.exports=t.exports,this.memory=s,this.imports=r;for(const e of["run","initialize","__wasm_call_ctors","stackSave","stackRestore","stackAlloc","emscripten_stack_init","emscripten_stack_get_free","emscripten_stack_get_end","emscripten_stack_get_base","emscripten_stack_set_limits","emscripten_get_sbrk_ptr","__errno_location","emscripten_main_thread_process_queued_calls","emscripten_current_thread_process_queued_calls","emscripten_check_blocking_allowed","__emscripten_thread_init","__emscripten_thread_exit","__emscripten_thread_crashed","__emscripten_thread_free_data","emscripten_main_thread_futex_wait","emscripten_main_thread_futex_wake","emscripten_futex_wait","emscripten_futex_wake","_emscripten_get_now","_emscripten_get_now_is_monotonic","emscripten_get_remote_gpu","emscripten_set_batterychargingchange_callback_func","emscripten_set_batteryhalfempty_callback_func","emscripten_set_batterylow_callback_func","emscripten_set_orientationchange_callback_func","emscripten_set_vrdisplaypresentchange_callback_func","emscripten_set_gamepadconnected_callback_func","emscripten_set_gamepaddisconnected_callback_func","emscripten_set_beforeunload_callback_func","emscripten_set_blur_callback_func","emscripten_set_focus_callback_func","emscripten_set_hashchange_callback_func","emscripten_set_languagechange_callback_func","emscripten_set_message_callback_func","emscripten_set_offline_callback_func","emscripten_set_online_callback_func","emscripten_set_pagehide_callback_func","emscripten_set_pageshow_callback_func","emscripten_set_popstate_callback_func","emscripten_set_rejectionhandled_callback_func","emscripten_set_storage_callback_func","emscripten_set_unhandledrejection_callback_func","emscripten_set_appinstalled_callback_func","emscripten_set_beforeinstallprompt_callback_func","emscripten_set_beforexrselect_callback_func","emscripten_set_click_callback_func","emscripten_set_compositionend_callback_func","emscripten_set_compositionstart_callback_func","emscripten_set_compositionupdate_callback_func","emscripten_set_contextmenu_callback_func","emscripten_set_dblclick_callback_func","emscripten_set_focusin_callback_func","emscripten_set_focusout_callback_func","emscripten_set_input_callback_func","emscripten_set_keydown_callback_func","emscripten_set_keypress_callback_func","emscripten_set_keyup_callback_func","emscripten_set_mousedown_callback_func","emscripten_set_mouseenter_callback_func","emscripten_set_mouseleave_callback_func","emscripten_set_mousemove_callback_func","emscripten_set_mouseout_callback_func","emscripten_set_mouseover_callback_func","emscripten_set_mouseup_callback_func","emscripten_set_pointerlockchange_callback_func","emscripten_set_pointerlockerror_callback_func","emscripten_set_wheel_callback_func","emscripten_set_canplay_callback_func","emscripten_set_canplaythrough_callback_func","emscripten_set_durationchange_callback_func","emscripten_set_emptied_callback_func","emscripten_set_ended_callback_func","emscripten_set_loadeddata_callback_func","emscripten_set_loadedmetadata_callback_func","emscripten_set_loadstart_callback_func","emscripten_set_pause_callback_func","emscripten_set_play_callback_func","emscripten_set_playing_callback_func","emscripten_set_progress_callback_func","emscripten_set_ratechange_callback_func","emscripten_set_seeked_callback_func","emscripten_set_seeking_callback_func","emscripten_set_stalled_callback_func","emscripten_set_suspend_callback_func","emscripten_set_timeupdate_callback_func","emscripten_set_volumechange_callback_func","emscripten_set_waiting_callback_func","emscripten_set_devicemotion_callback_func","emscripten_set_deviceorientation_callback_func","emscripten_set_deviceorientationabsolute_callback_func","emscripten_set_animationend_callback_func","emscripten_set_animationiteration_callback_func","emscripten_set_animationstart_callback_func","emscripten_set_fullscreenchange_callback_func","emscripten_set_fullscreenerror_callback_func","emscripten_set_transitionend_callback_func","emscripten_set_resize_callback_func","emscripten_set_scroll_callback_func","emscripten_set_visibilitychange_callback_func","emscripten_set_drag_callback_func","emscripten_set_dragend_callback_func","emscripten_set_dragenter_callback_func","emscripten_set_dragleave_callback_func","emscripten_set_dragover_callback_func","emscripten_set_dragstart_callback_func","emscripten_set_drop_callback_func","emscripten_set_touchend_callback_func","emscripten_set_touchmove_callback_func","emscripten_set_touchstart_callback_func","emscripten_set_touchcancel_callback_func","emscripten_asm_const_int","emscripten_asm_const_double","emscripten_get_module_name","emscripten_get_preloaded_image_data","emscripten_get_preloaded_image_data_from_FILE","emscripten_set_webglcontextrestored_callback_func","emscripten_webgl_make_context_current","emscripten_webgl_get_current_context","emscripten_webgl_get_drawing_buffer_size","emscripten_webgl_commit_frame","emscripten_webgl_destroy_context","emscripten_webgl_init_context_attributes","emscripten_get_proc_address","emscripten_webgl_enable_extension","emscripten_get_compiler_setting","emscripten_get_global_gpu_object","emscripten_webgl_get_client_version","emscripten_webgl_get_context_version","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindTexture","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteRenderbuffers","emscripten_glDeleteShader","emscripten_glDeleteTextures","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTexture3D","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenRenderbuffers","emscripten_glGenTextures","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetIntegerv","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetRenderbufferParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsRenderbuffer","emscripten_glIsShader","emscripten_glIsTexture","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPixelStorei","emscripten_glPolygonOffset","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glSampleCoverage","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix4fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glDrawArraysInstanced","emscripten_glDrawElementsInstanced","emscripten_glVertexAttribDivisor","emscripten_glCreateVertexArray","emscripten_glDeleteVertexArrays","emscripten_glBindVertexArray","emscripten_glIsVertexArray","emscripten_glDrawBuffers","emscripten_glReadBuffer","emscripten_glBlitFramebuffer","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glRenderbufferStorageMultisample","emscripten_glFramebufferTextureLayer","emscripten_glGetInternalformativ","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glGenQueries","emscripten_glDeleteQueries","emscripten_glIsQuery","emscripten_glBeginQuery","emscripten_glEndQuery","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryiv","emscripten_glGenSamplers","emscripten_glDeleteSamplers","emscripten_glIsSampler","emscripten_glBindSampler","emscripten_glSamplerParameteri","emscripten_glSamplerParameterf","emscripten_glGetSamplerParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glFenceSync","emscripten_glIsSync","emscripten_glDeleteSync","emscripten_glClientWaitSync","emscripten_glWaitSync","emscripten_glGetSynciv","emscripten_glGenTransformFeedbacks","emscripten_glDeleteTransformFeedbacks","emscripten_glIsTransformFeedback","emscripten_glBindTransformFeedback","emscripten_glBeginTransformFeedback","emscripten_glEndTransformFeedback","emscripten_glTransformFeedbackVaryings","emscripten_glGetTransformFeedbackVarying","emscripten_glPauseTransformFeedback","emscripten_glResumeTransformFeedback","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glGetUniformIndices","emscripten_glGetActiveUniformsiv","emscripten_glGetUniformBlockIndex","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformBlockName","emscripten_glUniformBlockBinding","emscripten_glGetIntegeri_v","emscripten_glGetInteger64_v","emscripten_glGetInteger64i_v","emscripten_glGetBufferParameteri64v","emscripten_glGetStringi","emscripten_glCopyBufferSubData","emscripten_glProgramParameteri","emscripten_glMapBufferRange","emscripten_glUnmapBuffer","emscripten_glFlushMappedBufferRange","emscripten_glCreateTexture","emscripten_glDestroyTexture","emscripten_glCreateBuffer","emscripten_glDestroyBuffer","emscripten_glCreateFramebuffer","emscripten_glDestroyFramebuffer","emscripten_glCreateRenderbuffer","emscripten_glDestroyRenderbuffer","emscripten_glCreateQuery","emscripten_glDestroyQuery","emscripten_glCreateProgram","emscripten_glDestroyProgram","emscripten_glCreateShader","emscripten_glDestroyShader","emscripten_glCreateSampler","emscripten_glDestroySampler","emscripten_glCreateVertexArray","emscripten_glDestroyVertexArray","emscripten_glCreateTransformFeedback","emscripten_glDestroyTransformFeedback","emscripten_glGetError","emscripten_glCreateSync","emscripten_glDestroySync","emscripten_glIsTexture","emscripten_glIsBuffer","emscripten_glIsFramebuffer","emscripten_glIsRenderbuffer","emscripten_glIsQuery","emscripten_glIsProgram","emscripten_glIsShader","emscripten_glIsSampler","emscripten_glIsVertexArray","emscripten_glIsTransformFeedback","emscripten_glIsSync","emscripten_glEnable","emscripten_glDisable","emscripten_glIsEnabled","emscripten_glFenceSync","emscripten_glClientWaitSync","emscripten_glWaitSync","emscripten_glDeleteSync","emscripten_glGetSynciv","emscripten_glGenQueries","emscripten_glDeleteQueries","emscripten_glBeginQuery","emscripten_glEndQuery","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryiv","emscripten_glGenSamplers","emscripten_glDeleteSamplers","emscripten_glBindSampler","emscripten_glSamplerParameteri","emscripten_glSamplerParameterf","emscripten_glGetSamplerParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGenTransformFeedbacks","emscripten_glDeleteTransformFeedbacks","emscripten_glBindTransformFeedback","emscripten_glBeginTransformFeedback","emscripten_glEndTransformFeedback","emscripten_glPauseTransformFeedback","emscripten_glResumeTransformFeedback","emscripten_glTransformFeedbackVaryings","emscripten_glGetTransformFeedbackVarying","emscripten_glGenVertexArrays","emscripten_glDeleteVertexArrays","emscripten_glBindVertexArray","emscripten_glGenBuffers","emscripten_glDeleteBuffers","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCopyBufferSubData","emscripten_glGetBufferParameteriv","emscripten_glGetBufferParameteri64v","emscripten_glMapBufferRange","emscripten_glUnmapBuffer","emscripten_glFlushMappedBufferRange","emscripten_glGenFramebuffers","emscripten_glDeleteFramebuffers","emscripten_glBindFramebuffer","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glCheckFramebufferStatus","emscripten_glBlitFramebuffer","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glGenRenderbuffers","emscripten_glDeleteRenderbuffers","emscripten_glBindRenderbuffer","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glGetRenderbufferParameteriv","emscripten_glGenTextures","emscripten_glDeleteTextures","emscripten_glBindTexture","emscripten_glActiveTexture","emscripten_glTexImage2D","emscripten_glTexSubImage2D","emscripten_glTexImage3D","emscripten_glTexSubImage3D","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage3D","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glGenerateMipmap","emscripten_glTexParameteri","emscripten_glTexParameterf","emscripten_glGetTexParameteriv","emscripten_glGetTexParameterfv","emscripten_glPixelStorei","emscripten_glReadPixels","emscripten_glReadBuffer","emscripten_glCreateProgram","emscripten_glDeleteProgram","emscripten_glLinkProgram","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glProgramParameteri","emscripten_glGetProgramiv","emscripten_glGetProgramInfoLog","emscripten_glCreateShader","emscripten_glDeleteShader","emscripten_glAttachShader","emscripten_glDetachShader","emscripten_glCompileShader","emscripten_glShaderSource","emscripten_glGetShaderiv","emscripten_glGetShaderInfoLog","emscripten_glGetAttachedShaders","emscripten_glGetShaderSource","emscripten_glReleaseShaderCompiler","emscripten_glShaderBinary","emscripten_glGetShaderPrecisionFormat","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetActiveUniformsiv","emscripten_glGetUniformLocation","emscripten_glGetAttribLocation","emscripten_glBindAttribLocation","emscripten_glGetUniformBlockIndex","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glUniformBlockBinding","emscripten_glGetUniformIndices","emscripten_glUniform1f","emscripten_glUniform2f","emscripten_glUniform3f","emscripten_glUniform4f","emscripten_glUniform1i","emscripten_glUniform2i","emscripten_glUniform3i","emscripten_glUniform4i","emscripten_glUniform1fv","emscripten_glUniform2fv","emscripten_glUniform3fv","emscripten_glUniform4fv","emscripten_glUniform1iv","emscripten_glUniform2iv","emscripten_glUniform3iv","emscripten_glUniform4iv","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix4fv","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4fv","emscripten_glEnableVertexAttribArray","emscripten_glDisableVertexAttribArray","emscripten_glVertexAttribPointer","emscripten_glVertexAttribDivisor","emscripten_glGetVertexAttribiv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribPointerv","emscripten_glDrawArrays","emscripten_glDrawElements","emscripten_glDrawArraysInstanced","emscripten_glDrawElementsInstanced","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glColorMask","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glClear","emscripten_glDepthFunc","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glFrontFace","emscripten_glCullFace","emscripten_glLineWidth","emscripten_glPolygonOffset","emscripten_glScissor","emscripten_glViewport","emscripten_glSampleCoverage","emscripten_glHint","emscripten_glFinish","emscripten_glFlush","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetIntegerv","emscripten_glGetIntegeri_v","emscripten_glGetInteger64_v","emscripten_glGetInteger64i_v","emscripten_glGetInternalformativ","emscripten_glStencilFuncSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glStencilFunc","emscripten_dlopen","emscripten_dlsym","emscripten_dlclose","emscripten_start_fetch","emscripten_start_wasm_worker_fetch_async","emscripten_fetch_close"]){const r=this.exports[e];if("function"!=typeof r)throw new l("missing export","the required export is not a function",e,"");this[e]=r.bind(this.exports)}}write(e,t,r,s){"string"==typeof t&&(t=new TextEncoder().encode(t));const i=t.length,n=e.stackAlloc(i+1);this.HEAPU8.set(t,n),this.HEAPU8[n+i]=0,e.run((()=>{e.FS.writeFile(r,this.HEAPU8.subarray(n,n+i),{encoding:"binary",canOwn:!0})})),e.stackRestore(s)}read(e,t,r){const s=e.stackSave();try{const i=e.FS.readFile(t,{encoding:"binary"});if(i)return new TextDecoder().decode(i)}finally{e.stackRestore(s)}}}let u;async function h(t,s){let i,n;if(u&&!s)return u;if("undefined"!=typeof WebAssembly)i="undefined"!=typeof fetch?fetch(t):await(await import("node:fs/promises")).readFile(t),n=await WebAssembly.instantiateStreaming(i,r);else if(e()){const e=await import("node:fs/promises");i=await e.readFile(t),n=await WebAssembly.instantiate(i,r)}else{if(await(e=>new Promise(((t,r)=>{const s=new XMLHttpRequest;s.open("GET",e,!0),s.responseType="arraybuffer",s.onload=function(){200==s.status||0==s.status&&s.response?t(s.response):r(s.statusText)},s.onerror=r,s.send(null)}))(t),!i)throw new l("no wasm support","the host environment does not support WebAssembly","instantiateWasm","");n=await WebAssembly.instantiate(i,r)}return n}const m=["SIGABRT","SIGFPE","SIGILL","SIGINT","SIGSEGV","SIGTERM"],d=[128,132,132,2,139,15],p=["E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EALREADY","EBADF","EBADMSG","EBUSY","ECANCELED","ECHILD","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOBUFS","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPROTOOPT","ENOSPC","ENOSYS","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOPNOTSUPP","EOVERFLOW","EPERM","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EROFS","ESPIPE","ESRCH","ESTALE","ETIMEDOUT","ETXTBSY","EXDEV","ENOTCAPABLE"],g=[7,13,98,99,97,11,114,9,74,16,125,10,103,111,104,35,89,33,122,17,14,27,113,43,84,115,4,22,5,107,21,40,24,31,90,75,36,100,101,102,23,105,19,2,8,37,123,12,42,91,28,38,106,20,108,124,88,95,25,6,95,75,1,32,92,93,94,34,30,29,3,120,110,26,18,121],f=new Map([["SIGABRT",128],["SIGFPE",132],["SIGILL",132],["SIGINT",2],["SIGSEGV",139],["SIGTERM",15],["E2BIG",7],["EACCES",13],["EADDRINUSE",98],["EADDRNOTAVAIL",99],["EAFNOSUPPORT",97],["EAGAIN",11],["EALREADY",114],["EBADF",9],["EBADMSG",74],["EBUSY",16],["ECANCELED",125],["ECHILD",10],["ECONNABORTED",103],["ECONNREFUSED",111],["ECONNRESET",104],["EDEADLK",35],["EDESTADDRREQ",89],["EDOM",33],["EDQUOT",122],["EEXIST",17],["EFAULT",14],["EFBIG",27],["EHOSTUNREACH",113],["EIDRM",43],["EILSEQ",84],["EINPROGRESS",115],["EINTR",4],["EINVAL",22],["EIO",5],["EISCONN",107],["EISDIR",21],["ELOOP",40],["EMFILE",24],["EMLINK",31],["EMSGSIZE",90],["EMULTIHOP",75],["ENAMETOOLONG",36],["ENETDOWN",100],["ENETRESET",101],["ENETUNREACH",102],["ENFILE",23],["ENOBUFS",105],["ENODEV",19],["ENOENT",2],["ENOEXEC",8],["ENOLCK",37],["ENOLINK",123],["ENOMEM",12],["ENOMSG",42],["ENOPROTOOPT",91],["ENOSPC",28],["ENOSYS",38],["ENOTCONN",106],["ENOTDIR",20],["ENOTEMPTY",108],["ENOTRECOVERABLE",124],["ENOTSOCK",88],["ENOTSUP",95],["ENOTTY",25],["ENXIO",6],["EOPNOTSUPP",95],["EOVERFLOW",75],["EPERM",1],["EPIPE",32],["EPROTO",92],["EPROTONOSUPPORT",93],["EPROTOTYPE",94],["ERANGE",34],["EROFS",30],["ESPIPE",29],["ESRCH",3],["ESTALE",120],["ETIMEDOUT",110],["ETXTBSY",26],["EXDEV",18],["ENOTCAPABLE",121]]),b=new Map([[128,"SIGABRT"],[132,"SIGFPE"],[132,"SIGILL"],[2,"SIGINT"],[139,"SIGSEGV"],[15,"SIGTERM"],[7,"E2BIG"],[13,"EACCES"],[98,"EADDRINUSE"],[99,"EADDRNOTAVAIL"],[97,"EAFNOSUPPORT"],[11,"EAGAIN"],[114,"EALREADY"],[9,"EBADF"],[74,"EBADMSG"],[16,"EBUSY"],[125,"ECANCELED"],[10,"ECHILD"],[103,"ECONNABORTED"],[111,"ECONNREFUSED"],[104,"ECONNRESET"],[35,"EDEADLK"],[89,"EDESTADDRREQ"],[33,"EDOM"],[122,"EDQUOT"],[17,"EEXIST"],[14,"EFAULT"],[27,"EFBIG"],[113,"EHOSTUNREACH"],[43,"EIDRM"],[84,"EILSEQ"],[115,"EINPROGRESS"],[4,"EINTR"],[22,"EINVAL"],[5,"EIO"],[107,"EISCONN"],[21,"EISDIR"],[40,"ELOOP"],[24,"EMFILE"],[31,"EMLINK"],[90,"EMSGSIZE"],[75,"EMULTIHOP"],[36,"ENAMETOOLONG"],[100,"ENETDOWN"],[101,"ENETRESET"],[102,"ENETUNREACH"],[23,"ENFILE"],[105,"ENOBUFS"],[19,"ENODEV"],[2,"ENOENT"],[8,"ENOEXEC"],[37,"ENOLCK"],[123,"ENOLINK"],[12,"ENOMEM"],[42,"ENOMSG"],[91,"ENOPROTOOPT"],[28,"ENOSPC"],[38,"ENOSYS"],[106,"ENOTCONN"],[20,"ENOTDIR"],[108,"ENOTEMPTY"],[124,"ENOTRECOVERABLE"],[88,"ENOTSOCK"],[95,"ENOTSUP"],[25,"ENOTTY"],[6,"ENXIO"],[95,"EOPNOTSUPP"],[75,"EOVERFLOW"],[1,"EPERM"],[32,"EPIPE"],[92,"EPROTO"],[93,"EPROTONOSUPPORT"],[94,"EPROTOTYPE"],[34,"ERANGE"],[30,"EROFS"],[29,"ESPIPE"],[3,"ESRCH"],[120,"ESTALE"],[110,"ETIMEDOUT"],[26,"ETXTBSY"],[18,"EXDEV"],[121,"ENOTCAPABLE"]]);const v=()=>"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:void 0;function _(e,t,r){let s;s="function"==typeof t?t.call(r):t;const i={};for(const e in s)i[e]={configurable:!0,enumerable:!0,value:s[e],writable:!0};for(const t in i)Object.defineProperty(e,t,i[t])}function E(e){const t=v();return e in t?t[e]:void 0}function S(){let e=E("navigator");return null!=e&&e.userAgent?e.userAgent:"none"}function w(){return S().includes("Chrome/")}function A(){return S().includes("Firefox/")}function y(){return(w()||A())&&!C()&&!I()&&!T()}function C(){return S().includes("Safari/")&&!S().includes("Chrome/")&&!S().includes("Chromium/")}function I(){return e()||t()||r()}function T(){return!!(S().includes("Mini")&&S().includes("Silk/"))||!!(S().includes("Android")&&S().includes("wv"))}function k(){return S().includes("Windows")}function P(){return S().includes("Macintosh")}const F=["faiss-wasm.wasm","faiss-wasm.js"];async function L(s,...i){let n;if(!s||"string"!=typeof s)throw new l("expected a string","s is not a string","default","");const o=(e,t,r,s,i)=>{const n=(()=>{if(void 0===n)throw new l("no path","path is undefined","default","");let e=n;return e.startsWith("http://")||e.startsWith("https://")?e:e.startsWith("./")?e:`./${e}`})(),o=(e,t,r,s,i)=>{let n;if(I()){const e=E("path");n=e.join(s,...i)}else n=s+"/"+i.join("/");return n};let a=(e,t)=>{const r=o(e,void 0,void 0,t,F);return r};for(let e of i)a=e(a,e=>new Promise(((t,r)=>{let s={};s.instantiateWasm=(e,i)=>h(e,i),s.locateFile=a.bind(null,e),s.mainScriptUrlOrBlob=s.locateFile(e,""),s.print=console.log.bind(console),s.printErr=console.error.bind(console),((e,t)=>{const r=v();r.Module=t,_(t,e,r)})(s,s),t(s)}),o,e=>new Promise(((t,r)=>{if(e()){const s=v();let i=E("fs");if(!i)try{i=require("node:fs")}catch(e){}let n;if(e()&&i){const e=v();n=i.readFileSync(s)}else{const e=new XMLHttpRequest;e.open("GET",s,!1),e.send(null),n=e.responseText}new Function(n)(),t(r.Module)}else if(a()){const i=v(),n=E("document"),o=n.createElement("script");o.src=s,o.onload=()=>{t(i.Module)},n.body.appendChild(o)}else if(i()||n()){const i=v();importScripts(s),t(i.Module)}else r("Cannot load "+s+" in " S())}))).then((t=>n=t))}"function"==typeof s&&(n=await s(n));let c;const u=v();if(n.onRuntimeInitialized)c=new Promise((e=>n.onRuntimeInitialized=e));else if(n.then)c=n.then((e=>c=new Promise((t=>e.onRuntimeInitialized=t))));else if("function"==typeof n)try{n=n(),n.onRuntimeInitialized?c=new Promise((e=>n.onRuntimeInitialized=e)):n.then&&(c=n.then((e=>(c=new Promise((t=>e.onRuntimeInitialized=t))),e)))}catch(e){throw new l("failed to execute factory","the factory function threw an error","default","")}else c=Promise.resolve(n);let m=await c;return m.then&&(m=await m),m.Faiss&&m.Faiss.ready&&(m=await m.Faiss.ready),new class{constructor(e,t,r,s){this.module=e,this.FS=e.FS,this.c=new c(e),this.ready=Promise.resolve(),this.InternalError=class extends Error{},this.version="1.7.4",this.MetricType={METRIC_INNER_PRODUCT:0,METRIC_L2:1,METRIC_L1:2,METRIC_Linf:3,METRIC_Lp:4,METRIC_Canberra:20,METRIC_BrayCurtis:21,METRIC_JensenShannon:22},this.INDICES=[{name:"IndexFlatL2",factory:()=>new U(this)},{name:"IndexFlatIP",factory:()=>new x(this)},{name:"IndexIVFFlat",factory:()=>new R(this)},{name:"IndexLSH",factory:()=>new N(this)},{name:"IndexScalarQuantizer",factory:()=>new z(this)},{name:"IndexIVFScalarQuantizer",factory:()=>new M(this)},{name:"IndexPQ",factory:()=>new D(this)},{name:"IndexIVFPQ",factory:()=>new q(this)},{name:"IndexHNSWFlat",factory:()=>new O(this)},{name:"IndexHNSWPQ",factory:()=>new G(this)},{name:"IndexHNSWSQ",factory:()=>new j(this)},{name:"IndexIDMap",factory:()=>new H(this)},{name:"IndexIDMap2",factory:()=>new B(this)}],this.indices=new Map(this.INDICES.map((e=>[e.name,e.factory])))}get(e){const t=this.indices.get(e);if(!t)throw new l("index not found","the index is not available in this build",e,"get");return t()}read(e){const t=this.c.stackAlloc(4);this.c.HEAPU8.set(e,t);const r=this.c.exports.faiss_read_index_header(t);if(0===r)throw new l("invalid index","the index is not a valid faiss index","read","");const s=this.c.exports.faiss_get_index_name(r);this.c.exports.free(r);const i=this.get(s);return i.read(e),i}deserialize(e){const t=new Uint8Array(e),r=this.c.stackAlloc(t.byteLength);this.c.HEAPU8.set(t,r);const s=this.c.exports.faiss_read_index_from_buffer(r,t.byteLength);if(!s)throw new l("invalid index data","could not deserialize the index from the buffer","deserialize","");const i=this.c.exports.faiss_get_index_name(s);this.c.exports.free(s);const n=this.get(i);return n.deserialize(e),n}}((await n).Faiss,e,t,r)}}class W{constructor(e,t){this.faiss=e,this.module=e.module,this.c=e.c,this.ptr=t}get is_trained(){const e=this.c.exports.faiss_Index_is_trained(this.ptr);return 1==e}get ntotal(){const e=this.c.exports.faiss_Index_ntotal(this.ptr);return e}get d(){const e=this.c.exports.faiss_Index_d(this.ptr);return e}add(e){const t=e.length/this.d,r=this.c.stackAlloc(e.byteLength);this.c.HEAPF32.set(e,r/4);const s=this.c.exports.faiss_Index_add(this.ptr,t,r);if(s)throw new l("failed to add vectors","the index returned a non-zero error code",s,"add")}add_with_ids(e,t){const r=e.length/this.d,s=this.c.stackAlloc(e.byteLength);this.c.HEAPF32.set(e,s/4);const i=this.c.stackAlloc(t.byteLength);this.c.HEAP64.set(t,i/8);const n=this.c.exports.faiss_Index_add_with_ids(this.ptr,r,s,i);if(n)throw new l("failed to add vectors","the index returned a non-zero error code",n,"add_with_ids")}train(e){const t=e.length/this.d,r=this.c.stackAlloc(e.byteLength);this.c.HEAPF32.set(e,r/4);const s=this.c.exports.faiss_Index_train(this.ptr,t,r);if(s)throw new l("failed to train","the index returned a non-zero error code",s,"train")}search(e,t){const r=e.length/this.d,s=r*t,i=this.c.stackAlloc(t*r*4);this.c.HEAPF32.fill(0,i,i+s);const n=this.c.stackAlloc(t*r*8);this.c.HEAP64.fill(0n,n,n+s);const o=this.c.stackAlloc(e.byteLength);this.c.HEAPF32.set(e,o/4);const a=this.c.exports.faiss_Index_search(this.ptr,r,o,t,i,n);if(a)throw new l("failed to search","the index returned a non-zero error code",a,"search");const c=this.c.HEAPF32.subarray(i/4,i/4+s),u=this.c.HEAP64.subarray(n/8,n/8+s);return{distances:c,labels:u}}range_search(e,t){const r=this.c.stackAlloc(4);this.c.HEAPU32[r/4]=0;const s=this.c.stackAlloc(4);this.c.HEAPU32[s/4]=0;const i=this.c.stackAlloc(4);this.c.HEAPU32[i/4]=0;const n=e.length/this.d,o=this.c.stackAlloc(e.byteLength);this.c.HEAPF32.set(e,o/4);const a=this.c.exports.faiss_Index_range_search(this.ptr,n,o,t,r,s,i);if(a)throw new l("failed to search","the index returned a non-zero error code",a,"range_search");const c=this.c.HEAPU32[r/4],u=this.c.HEAPF32.subarray(s/4,s/4+c),h=this.c.HEAP64.subarray(i/8,i/8+c),m=this.c.HEAPU32[r/4-1];return{distances:u,labels:h,lims:m}}reset(){const e=this.c.exports.faiss_Index_reset(this.ptr);if(e)throw new l("failed to reset","the index returned a non-zero error code",e,"reset")}write(e){const t=this.c.stackAlloc(4);this.c.HEAPU32[t/4]=0;const r=this.c.stackAlloc(4);this.c.HEAPU32[r/4]=0;const s=this.c.exports.faiss_Index_write(this.ptr,t,r);if(s)throw new l("failed to write","the index returned a non-zero error code",s,"write");const i=this.c.HEAPU32[t/4],n=this.c.HEAPU32[r/4],o=this.c.HEAPU8.subarray(i,i+n);return this.c.exports.free(i),o}read(e){const t=this.c.stackAlloc(4);this.c.HEAPU8.set(e,t);const r=this.c.exports.faiss_read_index_from_buffer(t,e.byteLength);if(r)throw new l("failed to read","the index returned a non-zero error code",r,"read")}free(){const e=this.c.exports.faiss_Index_free(this.ptr);if(e)throw new l("failed to free","the index returned a non-zero error code",e,"free")}reconstruct(e){const t=this.c.stackAlloc(this.d*4),r=this.c.exports.faiss_Index_reconstruct(this.ptr,e,t);if(r)throw new l("failed to reconstruct","the index returned a non-zero error code",r,"reconstruct");const s=this.c.HEAPF32.subarray(t/4,t/4+this.d);return s}reconstruct_n(e,t){const r=(t-e)*this.d,s=this.c.stackAlloc(r*4),i=this.c.exports.faiss_Index_reconstruct_n(this.ptr,e,t,s);if(i)throw new l("failed to reconstruct","the index returned a non-zero error code",i,"reconstruct_n");const n=this.c.HEAPF32.subarray(s/4,s/4+r);return n}remove_ids(e){const t=e.length,r=this.c.stackAlloc(4);this.c.HEAPU32[r/4]=0;const s=this.c.stackAlloc(t*8);this.c.HEAP64.set(e,s/8);const i=this.c.exports.faiss_Index_remove_ids(this.ptr,r,s);if(i)throw new l("failed to remove ids","the index returned a non-zero error code",i,"remove_ids");const n=this.c.HEAPU32[r/4];return n}merge_from(e){const t=this.c.exports.faiss_Index_merge_from(this.ptr,e.ptr);if(t)throw new l("failed to merge","the index returned a non-zero error code",t,"merge_from")}serialize(){const e=this.c.stackAlloc(4);this.c.HEAPU32[e/4]=0;const t=this.c.stackAlloc(4);this.c.HEAPU32[t/4]=0;const r=this.c.exports.faiss_Index_serialize(this.ptr,e,t);if(r)throw new l("failed to serialize","the index returned a non-zero error code",r,"serialize");const s=this.c.HEAPU32[e/4],i=this.c.HEAPU32[t/4],n=this.c.HEAPU8.subarray(s,s+i);return this.c.exports.free(s),n}deserialize(e){const t=new Uint8Array(e),r=this.c.stackAlloc(t.byteLength);this.c.HEAPU8.set(t,r);const s=this.c.exports.faiss_read_index_from_buffer(r,t.byteLength);if(!s)throw new l("invalid index data","could not deserialize the index from the buffer","deserialize","");this.ptr=s}}class U extends W{constructor(e,t,r){super(e,e.c.exports.faiss_IndexFlatL2_new_with(t,r))}}class x extends W{constructor(e,t,r){super(e,e.c.exports.faiss_IndexFlatIP_new_with(t,r))}}class R extends W{constructor(e,t,r,s){super(e,e.c.exports.faiss_IndexIVFFlat_new_with_metric(t.ptr,r,s))}get nprobe(){return this.c.exports.faiss_IndexIVF_nprobe(this.ptr)}set nprobe(e){this.c.exports.faiss_IndexIVF_set_nprobe(this.ptr,e)}get quantizer(){const e=this.c.exports.faiss_IndexIVF_quantizer(this.ptr);return new W(this.faiss,e)}get nlist(){return this.c.exports.faiss_IndexIVF_nlist(this.ptr)}}class N extends W{constructor(e,t,r){super(e,e.c.exports.faiss_IndexLSH_new(t,r))}}class z extends W{constructor(e,t,r){super(e,e.c.exports.faiss_IndexScalarQuantizer_new_with_qtype(t,r))}}class M extends W{constructor(e,t,r,s,i){super(e,e.c.exports.faiss_IndexIVFScalarQuantizer_new_with_qtype(t.ptr,r,s,i))}}class D extends W{constructor(e,t,r,s){super(e,e.c.exports.faiss_IndexPQ_new(t,r,s))}}class q extends W{constructor(e,t,r,s,i,n){super(e,e.c.exports.faiss_IndexIVFPQ_new_with_metric(t.ptr,r,s,i,n))}}class O extends W{constructor(e,t,r){super(e,e.c.exports.faiss_IndexHNSWFlat_new(t,r))}}class G extends W{constructor(e,t,r,s){super(e,e.c.exports.faiss_IndexHNSWPQ_new(t,r,s))}}class j extends W{constructor(e,t,r,s){super(e,e.c.exports.faiss_IndexHNSWSQ_new_with_qtype(t,r,s))}}class H extends W{constructor(e,t){super(e,e.c.exports.faiss_IndexIDMap_new(t.ptr))}get id_map(){const e=this.c.stackAlloc(4),t=this.c.stackAlloc(4),r=this.c.exports.faiss_IndexIDMap_id_map(this.ptr,e,t);if(r)throw new l("failed to get id map","the index returned a non-zero error code",r,"id_map");const s=this.c.HEAPU32[e/4],i=this.c.HEAPU32[t/4],n=this.c.HEAP64.subarray(s/8,s/8+i);return this.c.exports.free(s),n}}class B extends W{constructor(e,t){super(e,e.c.exports.faiss_IndexIDMap2_new(t.ptr))}get id_map(){const e=this.c.stackAlloc(4),t=this.c.stackAlloc(4),r=this.c.exports.faiss_IndexIDMap2_id_map(this.ptr,e,t);if(r)throw new l("failed to get id map","the index returned a non-zero error code",r,"id_map");const s=this.c.HEAPU32[e/4],i=this.c.HEAPU32[t/4],n=this.c.HEAP64.subarray(s/8,s/8+i);return this.c.exports.free(s),n}}const J=["FaissIndex","default"];class K{constructor(e){if(this.version="0.2.2",e.onRuntimeInitialized){const t=e.onRuntimeInitialized;e.onRuntimeInitialized=()=>{this.onRuntimeInitialized(),t()}}else e.onRuntimeInitialized=this.onRuntimeInitialized;this.module=e}async onRuntimeInitialized(){await Promise.resolve()}}var V=Object.freeze({__proto__:null,FaissIndex:class extends K{constructor(e){super(e),this.MetricType=Object.freeze({METRIC_INNER_PRODUCT:0,METRIC_L2:1,METRIC_L1:2,METRIC_Linf:3,METRIC_Lp:4,METRIC_Canberra:20,METRIC_BrayCurtis:21,METRIC_JensenShannon:22}),this.indices=Object.freeze({IndexFlatL2:(e,t)=>new U(this,e,t),IndexFlatIP:(e,t)=>new x(this,e,t),IndexIVFFlat:(e,t,r)=>new R(this,e,t,r),IndexLSH:(e,t)=>new N(this,e,t),IndexScalarQuantizer:(e,t)=>new z(this,e,t),IndexIVFScalarQuantizer:(e,t,r,s)=>new M(this,e,t,r,s),IndexPQ:(e,t,r)=>new D(this,e,t,r),IndexIVFPQ:(e,t,r,s,i)=>new q(this,e,t,r,s,i),IndexHNSWFlat:(e,t)=>new O(this,e,t),IndexHNSWPQ:(e,t,r)=>new G(this,e,t,r),IndexHNSWSQ:(e,t,r,s)=>new j(this,e,t,r,s),IndexIDMap:e=>new H(this,e),IndexIDMap2:e=>new B(this,e)})}read(e){const t=new Uint8Array(e),r=this.c.stackAlloc(t.byteLength);this.c.HEAPU8.set(t,r);const s=this.module.ccall("faiss_read_index_header_from_buffer","number",["number","number"],[r,t.byteLength]);if(0===s)throw new l("invalid index","the index is not a valid faiss index","read","");const i=this.module.ccall("faiss_get_index_name","string",["number"],[s]);this.module._free(s);const n=new this.indices[i];return n.read(e),n}deserialize(e){const t=new Uint8Array(e),r=this.c.stackAlloc(t.byteLength);this.c.HEAPU8.set(t,r);const s=this.module.ccall("faiss_read_index_from_buffer","number",["number","number"],[r,t.byteLength]);if(!s)throw new l("invalid index data","could not deserialize the index from the buffer","deserialize","");const i=this.module.ccall("faiss_get_index_name","string",["number"],[s]);this.module._free(s);const n=new this.indices[i];return n.deserialize(e),n}get(e){return new this.indices[e]}},default:(s,...i)=>{const n=v(),o=n.document;return L(s,(s=>new Promise(((i,a)=>{const l={instantiateWasm:(s,i)=>{let o;if(e())o=h(s,i);else{const e=n.document.createElement("script");e.src=l.mainScriptUrlOrBlob,e.onload=()=>{h(s,i).then((e=>o=e))},n.document.body.appendChild(e)}return o},locateFile:(e,t)=>{let r;if(t){const s=t.lastIndexOf("/");-1!==s&&(r=t.slice(0,s+1))}else r=e.url;let s="faiss-wasm.wasm",i=n.location.pathname.split("/").slice(0,-1).join("/");return!I()||y()||o.currentScript&&o.currentScript.src||(s=new URL(s,i).href),n.FAISS_WASM_URL?n.FAISS_WASM_URL:s}};l.mainScriptUrlOrBlob=s.locateFile(l,"");const c=n.document.createElement("script");c.src=l.mainScriptUrlOrBlob,c.onload=()=>{const e=n.Module;_(e,l,n),i(e)},o.body.appendChild(c)}))),...i).then((e=>new V.FaissIndex(e)))}});for(const e of J)Object.defineProperty(V,e,{get:()=>V[e]});const Q=Object.freeze(Object.assign(Object.create(null),{__proto__:null,FaissIndex:K,default:L}));for(const e of J)Object.defineProperty(Q,e,{get:()=>Q[e]});export{K as FaissIndex,L as default};})();

